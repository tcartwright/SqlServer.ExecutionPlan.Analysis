//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SqlServer.ExecutionPlan.Analysis.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SqlServer.ExecutionPlan.Analysis.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
        ///&lt;html&gt;
        ///&lt;head&gt;
        ///	&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-16&quot;&gt;
        ///	&lt;title&gt;{name}Execution plan&lt;/title&gt;
        ///	&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;qp.css&quot;&gt;
        ///	&lt;script src=&quot;jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///	&lt;script src=&quot;jquery-ui.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///	&lt;script src=&quot;qp.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
        ///	&lt;script src=&quot;qp-tooltip [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AnalysisTemplate {
            get {
                return ResourceManager.GetString("AnalysisTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! jQuery v1.7.2 jquery.com | jquery.org/license */
        ///(function (a, b) {
        ///	function cy(a) { return f.isWindow(a) ? a : a.nodeType === 9 ? a.defaultView || a.parentWindow : !1 } function cu(a) { if (!cj[a]) { var b = c.body, d = f(&quot;&lt;&quot; + a + &quot;&gt;&quot;).appendTo(b), e = d.css(&quot;display&quot;); d.remove(); if (e === &quot;none&quot; || e === &quot;&quot;) { ck || (ck = c.createElement(&quot;iframe&quot;), ck.frameBorder = ck.width = ck.height = 0), b.appendChild(ck); if (!cl || !ck.createElement) cl = (ck.contentWindow || ck.contentDocument).document,  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery_min {
            get {
                return ResourceManager.GetString("jquery_min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! jQuery UI - v1.12.0 - 2016-07-13
        ///* http://jqueryui.com
        ///* Includes: position.js
        ///* Copyright jQuery Foundation and other contributors; Licensed MIT */
        ///
        ///(function(t){&quot;function&quot;==typeof define&amp;&amp;define.amd?define([&quot;jquery&quot;],t):t(jQuery)})(function(t){t.ui=t.ui||{},t.ui.version=&quot;1.12.0&quot;,function(){function e(t,e,i){return[parseFloat(t[0])*(p.test(t[0])?e/100:1),parseFloat(t[1])*(p.test(t[1])?i/100:1)]}function i(e,i){return parseInt(t.css(e,i),10)||0}function s(e){var i=e[0];return 9===i.nodeType?{width:e.wid [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery_ui_min {
            get {
                return ResourceManager.GetString("jquery_ui_min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MIT License (MIT)
        ///
        ///Copyright (c) 2011 Justin
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to the following conditions:
        ///
        ///The above copyrig [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LICENSE {
            get {
                return ResourceManager.GetString("LICENSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MediumCostOperator must be lower than the HighCostOperator.
        /// </summary>
        internal static string PlanValidator_ValidateSqlPlan_The_MediumCostOperator_must_be_lower_than_the_HighCostOperator {
            get {
                return ResourceManager.GetString("PlanValidator_ValidateSqlPlan_The_MediumCostOperator_must_be_lower_than_the_HighC" +
                        "ostOperator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to div.qp-root {
        ///	margin-bottom:25em; /* add this so the tooltips at the bottom of the page can be viewed */
        ///}
        ///
        ///div.qp-error {
        ///	outline:none;
        ///	border: 2px solid #ff0000 !important;
        ///	box-shadow: 0 0 15px 2px rgba(255,0,0,.70);
        ///}
        ///
        ///div.qp-warning {
        ///	outline:none;
        ///	border: 2px solid #ffa500 !important;
        ///	box-shadow: 0 0 15px 2px rgba(255,165,0,.70);
        ///}
        ///
        ///div.qp-node
        ///{
        ///	background-color: #FFFFCC;
        ///	margin: 2px;
        ///	padding: 2px;
        ///	border: 1px solid black;
        ///	font-size: 11px;
        ///	line-height: normal;
        ///}
        ///. [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string qp_css {
            get {
                return ResourceManager.GetString("qp_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if (typeof (QP) == &quot;undefined&quot; || !QP) {
        ///	var QP = {}
        ///};
        ///
        ///(function () {
        ///	/* Draws the lines linking nodes in query plan diagram.
        ///	root - The document element in which the diagram is contained. */
        ///	QP.drawLines = function (root) {
        ///		if (root === null || root === undefined) {
        ///			// Try and find it ourselves
        ///			root = $(&quot;.qp-root&quot;).parent();
        ///		} else {
        ///			// Make sure the object passed is jQuery wrapped
        ///			root = $(root);
        ///		}
        ///		// ReSharper disable once FunctionsUsedBeforeDeclared
        ///		internalDr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string qp_js {
            get {
                return ResourceManager.GetString("qp_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        ///	xmlns:msxsl=&quot;urn:schemas-microsoft-com:xslt&quot;
        ///	xmlns:s=&quot;http://schemas.microsoft.com/sqlserver/2004/07/showplan&quot;
        ///	exclude-result-prefixes=&quot;msxsl s xsl&quot;&gt;
        ///	&lt;xsl:output method=&quot;html&quot; indent=&quot;no&quot;
        ///			doctype-system=&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;
        ///			doctype-public=&quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; /&gt;
        ///	&lt;xsl:include href=&quot;qp.xslt&quot; /&gt;
        ///
        ///	&lt;xsl:template match= [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string qp_page_xslt {
            get {
                return ResourceManager.GetString("qp_page_xslt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $(document).ready(function () {
        ///	$(&apos;div.qp-node&apos;).mouseover(function () {
        ///		var qpNode = $(this);
        ///		var tt = qpNode.find(&apos;div.qp-tt&apos;);
        ///
        ///		//have to show the div before position as postion wont work on hidden items
        ///		tt.show();
        ///
        ///		tt.position({
        ///			my: &quot;left+&quot; + (qpNode.width() / 2) + &quot; bottom&quot;,
        ///			at: &quot;left center&quot;,
        ///			of: qpNode,
        ///			collision: &quot;flip flip&quot;
        ///		});
        ///	}).mouseout(function () {
        ///		var tt = $(this).find(&apos;div.qp-tt&apos;);
        ///		tt.hide();
        ///	});
        ///});
        ///
        ///.
        /// </summary>
        internal static string qp_tooltip {
            get {
                return ResourceManager.GetString("qp_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        ///		xmlns:msxsl=&quot;urn:schemas-microsoft-com:xslt&quot;
        ///		xmlns:s=&quot;http://schemas.microsoft.com/sqlserver/2004/07/showplan&quot;
        ///		xmlns:fn=&quot;http://Tim Cartwright.com/jsfunctions&quot;
        ///		xmlns:sspa=&quot;http://Tim Cartwright.com/plananalysis&quot;
        ///		exclude-result-prefixes=&quot;msxsl s xsl sspa fn&quot;&gt;
        ///	&lt;xsl:output method=&quot;html&quot; indent=&quot;yes&quot; omit-xml-declaration=&quot;yes&quot; /&gt;
        ///
        ///	&lt;xsl:variable name=&quot;lowercase&quot; select=&quot;&apos;abcdefghijklmn [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string qp_xslt {
            get {
                return ResourceManager.GetString("qp_xslt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid element type..
        /// </summary>
        internal static string RelOpArgs_RelOpArgs_Invalid_element_type {
            get {
                return ResourceManager.GetString("RelOpArgs_RelOpArgs_Invalid_element_type", resourceCulture);
            }
        }
    }
}
